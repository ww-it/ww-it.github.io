<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>WwIT</title>
    <link>https://ww-it.github.io/</link>
    <description>Recent content on WwIT</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 28 Nov 2022 15:32:20 +0800</lastBuildDate><atom:link href="https://ww-it.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>SmartOS 平台编译 EcoX</title>
      <link>https://ww-it.github.io/post/how-to-compile-ecox-on-smartos/</link>
      <pubDate>Mon, 28 Nov 2022 15:32:20 +0800</pubDate>
      
      <guid>https://ww-it.github.io/post/how-to-compile-ecox-on-smartos/</guid>
      <description>本文简要介绍如何在 SmartOS 上搭建 EcoX 开发环境，以及如何编译 EcoX。
准备工作 EcoX 的编译需要使用到 autoconf 和 automake 工具，如果从代码库拉取代码，则还需要用到 git 工具。
# pkgin -y in autoconf # pkgin -y in automake # pkgin -y in git 安装依赖 EcoX 依赖 PostgreSQL 的 libpq 库、Zookeeper 的 C 库以及 Log4c 日志库。
Zookeeper 依赖 SmartOS 的软件源中提供了 Zookeeper 库，我们可以通过下面的命令直接安装。
# pkgin -y in libzookeeper-3.4.12 版本号可能不对，可以通过 pkgin se zookeeper 先进行搜索，确定软件包的名称。
Log4c 依赖 SmartOS 的软件源中并不包含 Log4c 库，因此，我们需要从源码编译安装，我们可以使用下面的命令进行编译安装。
$ wget http://prdownloads.sourceforge.net/log4c/log4c-1.2.4.tar.gz $ tar zxf log4c-1.</description>
    </item>
    
    <item>
      <title>SmartOS 平台编译 PostgreSQL 数据库</title>
      <link>https://ww-it.github.io/post/how-to-compile-postgres-on-smartos/</link>
      <pubDate>Fri, 25 Nov 2022 11:09:20 +0800</pubDate>
      
      <guid>https://ww-it.github.io/post/how-to-compile-postgres-on-smartos/</guid>
      <description>本文简要介绍如何在 SmartOS 上搭建 PostgreSQL 开发环境，以及如何编译 PostgreSQL 数据库。
准备工作 这里我们通过 git 来拉取代码，因此首先安装 git 程序。
# pkgin in git 接着，创建一个普通用户来编译测试 PostgreSQL 数据库。
# useradd -m -d /home/hunghu -s /bin/bash hunghu # passwd hunghu 安装依赖 通过源码编译安装，我们需要安装一些基本的工具，如 gcc, make 等，我们使用下面的命令进行安装。
# pkgin -y in gcc10-10.3.0 # pkgin -y in gmake # pkgin -y in flex bison # pkgin -y in pkgconf # pkgin -y in icu # --with-icu # pkgin -y in libuuid # --with-uuid=e2fs # pkgin -y in libxml2 # --with-libxml # pkgin -y in libxslt # --with-libxslt # pkgin -y in llvm clang # --with-llvm # pkgin -y in openssl # --with-openssl # pkgin -y in pam-krb5 # --with-gssapi # pkgin -y in readline # --with-readline 编译完成之后，我们需要跑 TAP 测试，因此需要安装 TAP 测试套件。</description>
    </item>
    
    <item>
      <title>Ubuntu 平台交叉编译 Qt SQLite 动态库</title>
      <link>https://ww-it.github.io/post/qt-everywhere-cross-compile-with-sqlite/</link>
      <pubDate>Tue, 17 May 2022 11:01:07 +0800</pubDate>
      
      <guid>https://ww-it.github.io/post/qt-everywhere-cross-compile-with-sqlite/</guid>
      <description>本文简要记录一下如何在 Ubuntu 平台交叉编译 MIPS 平台的 Qt SQLite 动态库。
交叉编译工具 首先，我们需要安装交叉编译工具。我们使用 mips-gcc520-glibc222.tgz 二进制包进行安装。
$ tar xf mips-gcc520-glibc222.tgz -C /opt $ ls -al /opt/mips-gcc520-glibc222/ total 44 drwxr-xr-x 8 root root 4096 Mar 16 2018 . drwxr-xr-x 3 root root 4096 May 16 11:31 .. drwxr-xr-x 2 root root 4096 Jun 6 2019 bin drwxr-xr-x 3 root root 4096 Mar 16 2018 i686-pc-linux-gnu drwxr-xr-x 3 root root 4096 Mar 16 2018 lib drwxr-xr-x 3 root root 4096 Mar 16 2018 libexec drwxr-xr-x 7 root root 4096 Mar 16 2018 mips-linux-gnu drwxr-xr-x 5 root root 4096 Mar 16 2018 share -rw-r--r-- 1 root root 2613 Mar 16 2018 .</description>
    </item>
    
    <item>
      <title>CentOS 平台编译 PostgreSQL 数据库</title>
      <link>https://ww-it.github.io/post/how-to-compile-postgres-on-centos/</link>
      <pubDate>Fri, 29 Apr 2022 11:23:20 +0800</pubDate>
      
      <guid>https://ww-it.github.io/post/how-to-compile-postgres-on-centos/</guid>
      <description>本文简要介绍如何在 CentOS 上搭建 PostgreSQL 开发环境，以及如何编译 PostgreSQL 数据库。
安装依赖 由于可能使用不同的 GCC 进行编译，因此我们需要管理 GCC 的版本，好在 CentOS 提供了这样的工具，我们可以使用下面的命令来安装不同的 GCC。
$ sudo yum install -y centos-release-scl $ sudo yum install -y devtoolset-10 安装完成之后，查看 GCC 版本，如下所示：
$ gcc --version gcc (GCC) 4.8.5 20150623 (Red Hat 4.8.5-44) Copyright (C) 2015 Free Software Foundation, Inc. This is free software; see the source for copying conditions. There is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.</description>
    </item>
    
    <item>
      <title>Hello Friend</title>
      <link>https://ww-it.github.io/post/hello/</link>
      <pubDate>Thu, 17 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://ww-it.github.io/post/hello/</guid>
      <description>本文将简要介绍如何编写博客文章。本博客系统采用 HUGO 和 hugo-theme-terminal 主题搭建。因此，我们需要安装 HUGO 工具，官网有详细的说明，这里就不在赘述了。
新建文章 您可以通过如下命令新建一篇博客文章。
$ hugo new post/your-post-title.md 随后您可以使用任何您喜爱的编辑器对 content/post/your-post-title.md 文件进行编辑，文章支持 markdown 语法。
预览 在编辑文章的时候，我们可以通过如下命令开启一个 HTTP 服务以便预览我们当前撰写的文章。
$ hugo server </description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://ww-it.github.io/about/</link>
      <pubDate>Fri, 25 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://ww-it.github.io/about/</guid>
      <description>Hi there My name is Radek and I&amp;rsquo;m the author of this theme. I made it to help you present your ideas easier.
We all know how hard is to start something on the web, especially these days. You need to prepare a bunch of stuff, configure them and when that’s done — create the content.
This theme is pretty basic and covers all of the essentials. All you have to do is start typing!</description>
    </item>
    
    <item>
      <title>Showcase</title>
      <link>https://ww-it.github.io/showcase/</link>
      <pubDate>Wed, 18 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://ww-it.github.io/showcase/</guid>
      <description>Header 2 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam nec interdum metus. Aenean rutrum ligula sodales ex auctor, sed tempus dui mollis. Curabitur ipsum dui, aliquet nec commodo at, tristique eget ante. Donec quis dolor nec nunc mollis interdum vel in purus. Sed vitae leo scelerisque, sollicitudin elit sed, congue ante. In augue nisl, vestibulum commodo est a, tristique porttitor est. Proin laoreet iaculis ornare. Nullam ut neque quam.</description>
    </item>
    
  </channel>
</rss>
