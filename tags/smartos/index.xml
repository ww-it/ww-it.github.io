<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>SmartOS on WwIT</title>
    <link>https://ww-it.github.io/tags/smartos/</link>
    <description>Recent content in SmartOS on WwIT</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 28 Nov 2022 15:32:20 +0800</lastBuildDate><atom:link href="https://ww-it.github.io/tags/smartos/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>SmartOS 平台编译 EcoX</title>
      <link>https://ww-it.github.io/post/how-to-compile-ecox-on-smartos/</link>
      <pubDate>Mon, 28 Nov 2022 15:32:20 +0800</pubDate>
      
      <guid>https://ww-it.github.io/post/how-to-compile-ecox-on-smartos/</guid>
      <description>本文简要介绍如何在 SmartOS 上搭建 EcoX 开发环境，以及如何编译 EcoX。
准备工作 EcoX 的编译需要使用到 autoconf 和 automake 工具，如果从代码库拉取代码，则还需要用到 git 工具。
# pkgin -y in autoconf # pkgin -y in automake # pkgin -y in git 安装依赖 EcoX 依赖 PostgreSQL 的 libpq 库、Zookeeper 的 C 库以及 Log4c 日志库。
Zookeeper 依赖 SmartOS 的软件源中提供了 Zookeeper 库，我们可以通过下面的命令直接安装。
# pkgin -y in libzookeeper-3.4.12 版本号可能不对，可以通过 pkgin se zookeeper 先进行搜索，确定软件包的名称。
Log4c 依赖 SmartOS 的软件源中并不包含 Log4c 库，因此，我们需要从源码编译安装，我们可以使用下面的命令进行编译安装。
$ wget http://prdownloads.sourceforge.net/log4c/log4c-1.2.4.tar.gz $ tar zxf log4c-1.</description>
    </item>
    
    <item>
      <title>SmartOS 平台编译 PostgreSQL 数据库</title>
      <link>https://ww-it.github.io/post/how-to-compile-postgres-on-smartos/</link>
      <pubDate>Fri, 25 Nov 2022 11:09:20 +0800</pubDate>
      
      <guid>https://ww-it.github.io/post/how-to-compile-postgres-on-smartos/</guid>
      <description>本文简要介绍如何在 SmartOS 上搭建 PostgreSQL 开发环境，以及如何编译 PostgreSQL 数据库。
准备工作 这里我们通过 git 来拉取代码，因此首先安装 git 程序。
# pkgin in git 接着，创建一个普通用户来编译测试 PostgreSQL 数据库。
# useradd -m -d /home/hunghu -s /bin/bash hunghu # passwd hunghu 安装依赖 通过源码编译安装，我们需要安装一些基本的工具，如 gcc, make 等，我们使用下面的命令进行安装。
# pkgin -y in gcc10-10.3.0 # pkgin -y in gmake # pkgin -y in flex bison # pkgin -y in pkgconf # pkgin -y in icu # --with-icu # pkgin -y in libuuid # --with-uuid=e2fs # pkgin -y in libxml2 # --with-libxml # pkgin -y in libxslt # --with-libxslt # pkgin -y in llvm clang # --with-llvm # pkgin -y in openssl # --with-openssl # pkgin -y in pam-krb5 # --with-gssapi # pkgin -y in readline # --with-readline 编译完成之后，我们需要跑 TAP 测试，因此需要安装 TAP 测试套件。</description>
    </item>
    
  </channel>
</rss>
